plugins {
    id 'application'
    id 'com.github.ben-manes.versions' version '0.39.0'
	id 'com.adarshr.test-logger' version '3.0.0'
    id 'checkstyle'
    id 'jacoco'  
    id 'io.ebean' version '12.12.1'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]

repositories {
    mavenCentral()
}

application {
    mainClass = 'hexlet.code.App'
}

compileJava {
    options.release = 15
    options.encoding = "UTF-8"
}
sourceCompatibility = '15'
sourceSets.main.java.srcDirs = ['build/generated/sources/annotationProcessor/java/main','src/main/java']

// чтобы checkstyle не ругался на системные query beans, сгенерённый ebean`ом для классов сущностей
checkstyleMain {
    source = fileTree('src/main/java')
}

dependencies {
  // web-server + logger
  implementation 'io.javalin:javalin:4.0.1'
  implementation 'org.slf4j:slf4j-simple:1.7.31'

  // DB
  implementation 'com.h2database:h2:2.0.204'
  implementation 'org.postgresql:postgresql:42.2.24'

  // ebean
  implementation 'io.ebean:ebean:12.12.1'
  implementation 'io.ebean:ebean-ddl-generator:12.12.1'
  implementation 'io.ebean:ebean-querybean:12.12.1'
  implementation 'io.ebean:ebean-migration:12.12.1'
  implementation 'io.ebean:ebean-annotation:7.3'
  annotationProcessor 'io.ebean:querybean-generator:12.12.1'

  // NOTE: ebean-ddl-generator требует старые зависимости, которых нет в java 9 и выше
  implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5'
  implementation 'javax.activation:activation:1.1.1'

  compileOnly 'org.projectlombok:lombok:1.18.20'
  annotationProcessor 'org.projectlombok:lombok:1.18.20'

  // thymeleaf
  implementation 'org.thymeleaf:thymeleaf:3.0.12.RELEASE'
  implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.0.0'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
  implementation 'org.webjars:bootstrap:5.1.1'

  // test
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
  testImplementation 'org.assertj:assertj-core:3.21.0'
  testImplementation 'io.ebean:ebean-test:12.11.5'
  testImplementation 'com.konghq:unirest-java:3.13.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

testlogger {
  showStandardStreams true
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true // coveralls plugin depends on xml format report
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['hexlet/code/App.class'
                    ]
            )
        }))
    }
}

checkstyle {
    toolVersion '9.0'
}

task generateMigrations(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'hexlet.code.MigrationGenerator'
}

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean


